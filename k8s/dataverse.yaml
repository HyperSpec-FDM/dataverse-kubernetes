---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: dataverse
  labels:
    app: dataverse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dataverse
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app: dataverse
      annotations: {}
    spec:
      containers:
        - name: dataverse
          image: iqss/dataverse-k8s:4.11
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: dataverse
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: dataverse-postgresql
                  key: username
          volumeMounts:
            - name: files
              mountPath: /data
            - name: db-secret
              mountPath: "/opt/dataverse/secrets/db"
              readOnly: true
          readinessProbe:
            httpGet:
              path: /robots.txt
              port: 8080
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command: ["sh", "-c", "chown -c 1000:1000 /data"]
          volumeMounts:
          - name: files
            mountPath: /data
      volumes:
        - name: files
          persistentVolumeClaim:
            claimName: dataverse-files
        - name: db-secret
          secret:
            secretName: dataverse-postgresql
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dataverse
  labels:
    app: dataverse
data:
---
kind: Service
apiVersion: v1
metadata:
  name: dataverse
spec:
  ports:
    - port: 8080
      name: dataverse-http
      targetPort: 8080
      protocol: TCP
    - port: 8009
      name: dataverse-ajp
      targetPort: 8009
      protocol: TCP
  selector:
    app: dataverse
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dataverse-files
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 6G
  selector:
    matchLabels:
      backup: "False"
