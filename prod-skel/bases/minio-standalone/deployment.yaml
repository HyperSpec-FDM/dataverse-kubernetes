kind: Deployment
apiVersion: apps/v1
metadata:
  name: minio
  namespace: dv-test
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/component: storage
    app.kubernetes.io/part-of: dataverse
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/part-of: dataverse
  revisionHistoryLimit: 1
  strategy:
    # Choosen as upstream example uses this. Might be a thing of locks...
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/part-of: dataverse
      annotations: {}
    spec:
      containers:
        - name: minio
          image: minio/minio
          args: ["server", "/data", "--console-address", ":9010"]
          resources:
            requests:
              memory: "2Gi"
              cpu: "0.5"
            limits:
              memory: "4Gi"
              cpu: "2"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: dataverse-s3
                  key: access-key
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: dataverse-s3
                  key: secret-key
            # MinIO access key and secret key
#            - name: MINIO_ACCESS_KEY
#              value: "5IMXGis0YjH6620GIH16"
#            - name: MINIO_SECRET_KEY
#              value: "iJAI9HhY8RUW8RWjF0gt7lYZ9yxMKtFfuhlfrxLK"
#            - name: MINIO_BROWSER_ACCESS_KEY
#              value: "5IMXGis0YjH6620GIH16"
#            - name: MINIO_BROWSER_SECRET_KEY
#              value: "iJAI9HhY8RUW8RWjF0gt7lYZ9yxMKtFfuhlfrxLK"
          volumeMounts:
            - name: data
              mountPath: /data
            - name: minio-secrets
              mountPath: "/run/secrets/minio"
              readOnly: true
            - name: minio-config
              mountPath: /root/.mc
          ports:
            - containerPort: 9000
              name: service
            - containerPort: 9010
              name: console
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: service
            initialDelaySeconds: 30
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: service
            initialDelaySeconds: 30
            periodSeconds: 30
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: perm-and-bucket
          image: giantswarm/tiny-tools
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - |
              mkdir -p /data/hsma;
              chown -c 1000:1000 /data /data/hsma
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio
        - name: minio-secrets
          secret:
            secretName: dataverse-s3
        - name: minio-config
          emptyDir: {}
